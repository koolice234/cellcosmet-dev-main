{% comment %}
============= Warning: DO NOT EDIT THIS FILE UNLESS YOU KNOW WHAT YOU'RE DOING! =============

Please beware that editting this file could break your site as it's referenced in your theme's main theme.liquid file!

Also, if you're testing changes, please do so on a duplicate theme to avoid downtime for your users!

Instructions:
1) create a file named 'cross-sell-custom' inside of your Snippets folder.
Once created it SHOULD say 'cross-sell-custom.liquid' IF NOT, rename it.
2) make sure the 3 lines of code below are added BEFORE the </head> element of your theme.liquid file (or main theme file)

<!-- Cross Sell custom code start. Do not change -->
{%include 'cross-sell-custom'%}
<!-- Cross Sell custom code end. Do not change -->

3) Make sure you to SAVE the changes made to your theme.liquid file
4) Have Cross Sell's Settings -> Display Settings set to "custom" theme, and activate the carousel feature if needed.
5) Save your Settings

Have problems or feedback? DON'T PANIC! Email us at support@csell.co or check out support site -> https://help.csell.co

============= Warning: DO NOT EDIT THIS FILE UNLESS YOU KNOW WHAT YOU'RE DOING! =============
{% endcomment %}
<style>
.cross-sell.collection-products .item{
    width: 25%;
}
.cross-sell.collection-products .item .product-image{
    height: auto
}
#cross-sell>div{
    overflow: inherit !important;
}
.cross-sell.collection-products .item {
    width: 26% !important;
}
  .cross-sell .flickity-prev-next-button .flickity-button-icon {
  fill: #a80a14 !important;
}

.cross-sell .flickity-prev-next-button:hover {
  background: none !important;
}

@media screen and (max-width: 750px){
.cross-sell.collection-products .item {
  width: 100% !important;
}
  .cross-sell .flickity-prev-next-button.next:hover {
    background: none !important;
  }
}
</style>

<script>
window.xsellCustom = window.xsellCustom || {};
window.xsellCustom.theme_settings = window.xsellCustom.theme_settings || {};
window.xsellCustom.buildxsellsoutput = function(xsellitems, numproducts) {
    var xsmustbeavailable = xsellSettings.xsmustbeavailable;
    var xshideifincart = xsellSettings.xshideifincart;
    var xsdisplaycompareatprice = xsellSettings.xsdisplaycompareatprice;
    var xsdisplaysalebadge = xsellSettings.xsdisplaysalebadge;
    var xsdisplaypricevarieslabel = xsellSettings.xsdisplaypricevarieslabel;
    var xsdisplayvendor = xsellSettings.xsdisplayvendor;
    var xsimagesize = 'large';
    var xsvendoroutput = '';
    var xspricevarieslabel = '';
    var xscompareatprice = '';
    var xscompareatpricestring = '';
    var xssalepricestring = '';
    var xspriceoutput = '';
    var xssalebadge = '<span class="product-badge"><span>Sale</span></span>';
    var xssalebadgeoutput = '';
    var xspreorderbadgeoutput = '';
    var xssoldout = '';
    var xsquickshop = '';
    var saleclass = ' xs-sale';
    var fromlabel = '<em>from</em>';
    var xsprice = '';

    // add custom variables here

    for (var x = 0; x < numproducts; x++) {
        var xsproductdata = xsellitems[x];
        var xsProductTags = xsproductdata.tags;
        
        if (xsproductdata.images.length > 1) {
            var csimage = xsellLib.productimageurls(xsproductdata.images[0]);
            var csimagetwo = xsellLib.productimageurls(xsproductdata.images[1]);
        } else if (xsproductdata.images.length == 1) {
            var csimage = xsellLib.productimageurls(xsproductdata.images[0]);
            var csimagetwo = 'https://cdn.shopify.com/s/images/admin/no-image-' + xsimagesize + '.gif';
        } else {
            var csimage = 'https://cdn.shopify.com/s/images/admin/no-image-' + xsimagesize + '.gif';
            var csimagetwo = csimage;
        }
        if (xsdisplayvendor) {
            xsvendoroutput = '<div class="xs-vendor-name"><a href="' + xsproductdata.url + '">' + xsproductdata.vendor + '</a></div>';
        }

        xsprice = xsellLib.xsformatMoney(xsproductdata.price, '{{ shop.money_format }}');
        if (xsdisplaypricevarieslabel) {
            if (xsproductdata.price_varies) {
                xspricevarieslabel = 'From: ';
            } else {
                xspricevarieslabel = '';
            }
        }
        
        if (xsproductdata.compare_at_price > xsproductdata.price) {
            xscompareatprice = xsellLib.xsformatMoney(xsproductdata.compare_at_price, '{{ shop.money_format }}');
            xspriceoutput  = '<div class="price-box  has-special">';
            xspriceoutput +=    '<span class="h2 product-price" itemprop="price" content="' + xsproductdata.price/100 + '">' + xsprice + '</span>';
            xspriceoutput +=    '<span class="product-compare-price">' + xscompareatprice + '</span>';
            xspriceoutput += '</div>';
        } else {
            xspriceoutput = '<div class="price-box"><span class="h2 product-price" itemprop="price" content="' + xsproductdata.price/100 + '">' + xsprice + '</span></div>';
        }

        if (xsdisplaysalebadge) {
            // Original Sales badge code
            if (xsproductdata.compare_at_price > xsproductdata.price) {
                xssalebadgeoutput = xssalebadge;
            } else {
                xssalebadgeoutput = '';
            }
        }
        
        if (true) {
            // Show product badges
            var xsProductBadgeTag = xsProductTags.find(function(tag){
                return tag.includes("badge:");
            });
            if (xsProductBadgeTag) {
                xssalebadgeoutput = '<span class="product-badge"><span>' + xsProductBadgeTag.replace("badge:", "") + '</span></span>';
            } else {
                xssalebadgeoutput = '';
            }
        }
        
        if (true) {
            // Show pre-order badges
            xspreorderbadgeoutput = ''
            var xsProductPreorderTag = xsProductTags.find(function(tag){
                return tag.includes("{{- settings.product_preorder_message -}}");
            });
            if (xsProductPreorderTag) {
                xspreorderbadgeoutput = '<span class="product-badge"><span>' + "{{ 'products.product.pre_order' | t }}" + '</span></span>';
            } else {
                xspreorderbadgeoutput = '';
            }
        }
        
        if (xsproductdata.available) {
            xssoldout = '';
        } else {
            xssoldout = '<p class="out-of-stock">' + "{{ 'products.product.sold_out' | t }}" + '</p>';
        }
        
        {%- if plp_quickshop -%}
        if (xsproductdata.available) {
            xsquickshop = '<button class="quick-shop-trigger" data-url="' + xsproductdata.url + '">' + "{{ 'collections.general.quick_shop' | t }}" + '</button>';
        } else {
            xsquickshop = '';
        }
        {%- endif -%}
        
        // console.log(xsproductdata);
            
        xsellLib.xselloutput += '<div class="item" data-xsorder="' + xsproductdata["order"] + '">';
        xsellLib.xselloutput +=     '<div class="product-image-wrapper">';
        xsellLib.xselloutput +=         '<a href="' + xsproductdata.url + '">';
        xsellLib.xselloutput +=             '<img class="product-image" src="' + csimage + '" />';
        xsellLib.xselloutput +=         '</a>';
        xsellLib.xselloutput +=         xssalebadgeoutput;
        xsellLib.xselloutput +=         xspreorderbadgeoutput;
        xsellLib.xselloutput +=     '</div>';
        xsellLib.xselloutput +=     '<div class="product-info-wrapper">';
        xsellLib.xselloutput +=         '<p class="product-name">' + xsproductdata.title + '</p>';
        xsellLib.xselloutput +=         '<p class="product-desc">' + xsproductdata.description + '</p>';
        xsellLib.xselloutput +=         xspriceoutput;
        xsellLib.xselloutput +=         xssoldout;
        xsellLib.xselloutput +=     '</div>';
        xsellLib.xselloutput += '</div>';
    }

    if (xsellLib.xselloutput != '') {
        var innerHtml = '<div class="crosssell-text"><h3 class="title">' + xsellLib.settings.xstitle + '</h3></div><div class="collection-products items cross-sell">' + xsellLib.xselloutput + '</div>';
        if (document.getElementById('cross-sell')) {
            console.log('add crosssell');
            var xsellDiv = document.createElement('div');
            xsellDiv.innerHTML = innerHtml //output here
            document.getElementById('cross-sell').appendChild(xsellDiv);
        }
        if (document.getElementById('cross-sell-cart')) {
            console.log('add crosssell cart');
            var xsellDiv = document.createElement('div');
            xsellDiv.innerHTML = innerHtml //output here
            document.getElementById('cross-sell-cart').appendChild(xsellDiv);
        }
    } else {
        var hasCrossSellDiv = document.getElementsByClassName('has-cross-sell');
        if (hasCrossSellDiv.length) {
            for (var i = 0; i < hasCrossSellDiv.length; i++) { 
                hasCrossSellDiv[i].classList.remove('has-cross-sell');
            }
        }
    }
}
</script>